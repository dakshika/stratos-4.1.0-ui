<%
/*
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */
include('/controllers/login/validator.jag');
include('/controllers/menu/menu_generator.jag');

var log = new Log("apacheStratos.applications");
var error = [];
var caramel = require('caramel'),
        context = caramel.configs().context,
        menuJson = require('/controllers/menu/menu.json'),
        util = require('/controllers/rest/rest_calls.jag'),
        userPermissions = session.get('PERMISSIONS');

try{
    var availableCartridges = util.RESTCalls.getCartridges();
}catch(e){
    log.warn(e);
}


if (availableCartridges == null || availableCartridges == undefined || availableCartridges == "") {
    availableCartridges = {};
}
if (availableCartridges.Error != undefined) {
    error.push(availableCartridges.Error);
}

//create left menu
var leftMenu = menuGenerator(context, menuJson.menu, userPermissions);
//create metro block
var metroMenu = metroGenerator('/', menuJson.menu, userPermissions);

caramel.render({
    metro_menu: metroMenu,
    cartridges: availableCartridges,
    left_menu: leftMenu,
    error: error
});

%>